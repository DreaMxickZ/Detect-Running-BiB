from ultralytics import YOLO
import cv2
import os
import glob
import easyocr
import re

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• YOLO
model = YOLO("runs/detect/bib_aug_yolo_default/weights/best.pt")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á OCR reader
reader = easyocr.Reader(['en'])

# ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û
image_paths = glob.glob("D:/Running/*.jpg") + glob.glob("D:/Running/*.png")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
os.makedirs("predicted", exist_ok=True)

# ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
for path in image_paths:
    print(f"üîç Predicting: {path}")
    results = model(path)

    # ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö
    img = cv2.imread(path)

    # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    for i, box in enumerate(results[0].boxes):
        x1, y1, x2, y2 = map(int, box.xyxy[0])  # ‡∏û‡∏¥‡∏Å‡∏±‡∏î bbox
        cropped = img[y1:y2, x1:x2]  # ‡∏ï‡∏±‡∏î bib ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤

        # OCR
        ocr_result = reader.readtext(cropped)
        bib_number = None

        for detection in ocr_result:
            text = detection[1].replace(" ", "")  # ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
            conf = detection[2]

            # ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏•‡πâ‡∏ß‡∏ô
            if re.fullmatch(r'\d+', text):
                bib_number = text
                print(f"‚úÖ BIB Detected: {text} (Confidence: {conf:.2f})")

                # ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏†‡∏≤‡∏û
                cv2.rectangle(img, (x1, y1), (x2, y2), (0, 255, 0), 2)
                cv2.putText(img, text, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX,
                            1.2, (0, 255, 0), 3, cv2.LINE_AA)
                break
            else:
                print(f"‚ùå Skipped non-numeric text: {text}")

        # ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡∏Ç ‡∏Å‡πá‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏õ‡∏•‡πà‡∏≤
        if not bib_number:
            cv2.rectangle(img, (x1, y1), (x2, y2), (0, 0, 255), 2)

    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏£‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç
    out_path = f"predicted/{os.path.basename(path)}"
    cv2.imwrite(out_path, img)
    print(f"üíæ Saved: {out_path}\n")
